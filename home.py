import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
st.set_page_config(
    page_title="Mouse Viral Infection Study", 
    page_icon="ü¶†",
    layout="wide"
)

# Sidebar Navigation
st.sidebar.title("‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å")
page = st.sidebar.radio(
    "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô:",
    ["‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (Data View)", "‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ (Summary)", "‡∏Å‡∏£‡∏≤‡∏ü (Visualization)"]
)

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏û‡∏£‡πâ‡∏≠‡∏° caching
@st.cache_data
def load_data(path):
    df = pd.read_csv(path)
    return df

df = load_data("./data/mouse.csv")

# 1. Data View
if page == "‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (Data View)":
    st.header("‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ï‡πá‡∏° (First & Last Rows)")
    col1, col2 = st.columns(2)
    with col1:
        st.subheader("Top 10")
        st.dataframe(df.head(10), use_container_width=True)
    with col2:
        st.subheader("Bottom 10")
        st.dataframe(df.tail(10), use_container_width=True)

# 2. Summary
elif page == "‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ (Summary)":
    st.header("‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô")
    st.markdown("- **‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:** {} ‡πÅ‡∏ñ‡∏ß, {} ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå".format(df.shape[0], df.shape[1]))
    st.markdown("- **‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå:** {}".format(list(df.columns)))
    
    st.subheader("‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÄ‡∏ä‡∏¥‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç")
    st.dataframe(df.describe(), use_container_width=True)
    
    st.subheader("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢‡πÑ‡∏õ (Missing Values)")
    st.dataframe(df.isnull().sum(), use_container_width=True)

# 3. Visualization
else:
    st.header("‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏£‡∏≤‡∏ü")
    numeric_cols = df.select_dtypes(include=[np.number]).columns.tolist()
    cat_cols = df.select_dtypes(exclude=[np.number]).columns.tolist()

    chart_type = st.selectbox("‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏£‡∏≤‡∏ü:", ["Bar Chart", "Histogram", "Scatter Plot"])

    if chart_type == "Bar Chart":
        col = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå (Categorical):", cat_cols)
        counts = df[col].value_counts()
        st.bar_chart(counts)

    elif chart_type == "Histogram":
        col = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå (Numeric):", numeric_cols)
        fig, ax = plt.subplots()
        ax.hist(df[col].dropna(), bins=20)
        ax.set_xlabel(col)
        ax.set_ylabel("Frequency")
        st.pyplot(fig)

    else:  # Scatter Plot
        x_col = st.selectbox("X-axis:", numeric_cols, index=0)
        y_col = st.selectbox("Y-axis:", numeric_cols, index=1)
        fig, ax = plt.subplots()
        ax.scatter(df[x_col], df[y_col])
        ax.set_xlabel(x_col)
        ax.set_ylabel(y_col)
        st.pyplot(fig)

# Footer
st.sidebar.markdown("---")
st.sidebar.write("Developed with üíô by Your Name")